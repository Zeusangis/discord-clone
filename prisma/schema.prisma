generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String

  servers   Server[]
  members   Member[]
  channels  Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Server{
  id       String   @id @default(cuid())
  name     String
  imageUrl String @db.Text
  inviteCode String @unique

  userId String
  user  User @relation(fields: [userId], references: [id], onDelete: Cascade)

  members Member[]
  channels Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([userId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member{
  id       String   @id @default(cuid())
  role     MemberRole @default(GUEST)

  userId   String
  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)

  serverId String
  server  Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([serverId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel{
  id       String   @id @default(cuid())
  name     String
  type     ChannelType

  userId String
  user  User @relation(fields: [userId], references: [id], onDelete: Cascade)

  serverId String
  server  Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([serverId])
  @@index([userId])
}